{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","id","name","email","Cardlist","robots","cardComponent","map","user","i","SearchBox","searField","searchChange","type","placeholder","onChange","Scroll","style","overflowY","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","axios","get","then","response","data","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAceA,EAZF,SAACC,GACV,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAI,WAAWC,IAAG,+BAA0BH,EAAMI,GAAhC,cACnB,gCACI,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,eCOfC,EAZE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAETC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACpC,OAAQ,cAAC,EAAD,CAAMR,GAAII,EAAOI,GAAGR,GAAYC,KAAMG,EAAOI,GAAGP,KAAMC,MAAOE,EAAOI,GAAGN,OAA1CM,MAEzC,OACI,8BACCH,KCKMI,EAbG,SAAC,GAA8B,EAA7BC,UAA8B,IAAnBC,EAAkB,EAAlBA,aAC3B,OACI,qBAAKd,UAAU,MAAf,SACI,uBAAOA,UAAU,kCACbe,KAAK,SACLC,YAAY,gBACZC,SAAaH,OCEdI,EARA,SAACnB,GACZ,OACI,qBAAKoB,MAAO,CAACC,UAAU,SAAUC,OAAO,SAAxC,SACKtB,EAAMuB,YCmBJC,E,kDArBX,WAAYxB,GAAO,IAAD,8BACd,cAAMA,IACDyB,MAAO,CACRC,UAAU,GAHA,E,8DAMAC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAS,M,+BAIxB,OAAGG,KAAKJ,MAAMC,SACH,2DAEJG,KAAK7B,MAAMuB,a,GAfCQ,aC4DZC,G,wDAhDX,aAAc,IAAD,8BACT,gBAkBJC,eAAe,SAACC,GACR,EAAKJ,SAAS,CAACK,YAAYD,EAAME,OAAOC,SAlB5C,EAAKZ,MAAQ,CACTjB,OAAO,GACP2B,YAAY,IAJP,E,gEAQG,IAAD,OACZG,IAAMC,IAAI,8CACRC,MAAK,SAAAC,GACE,OAAOA,EAASC,QAEvBF,MAAK,SAAAG,GAEF,EAAKb,SAAS,CAACtB,OAAOmC,S,+BAQtB,MAE2Bd,KAAKJ,MAA5BjB,EAFJ,EAEIA,OAAQ2B,EAFZ,EAEYA,YACVS,EAAiBpC,EAAOqC,QAAO,SAAAC,GACrC,OAAOA,EAAMzC,KAAK0C,cAAcC,SAASb,EAAYY,kBAGrD,OAAIvC,EAAOyC,OAIX,sBAAKhD,UAAU,MAAf,UACI,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWc,aAAcc,KAAKI,iBAClC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzB,OAAQoC,WARf,gD,GAhCDb,cCDHmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.04367346.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='Jane Doe' src={`https://robohash.org/${props.id}?200x200`} />\r\n                <div>\r\n                    <h2>{props.name}</h2> \r\n                    <p>{props.email}</p>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n// import {robots} from './robots';\r\nimport Card from './Card'\r\nconst Cardlist = ({robots}) => {\r\n    // console.log(robots)\r\n    const cardComponent = robots.map((user, i)=>{\r\n        return  <Card id={robots[i].id} key={i} name={robots[i].name} email={robots[i].email} />\r\n    })\r\n    return(\r\n        <div>\r\n        {cardComponent}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Cardlist","import React from 'react'\r\n\r\nconst SearchBox = ({searField, searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input className='p3 ba b--green bg-lightest-blue'\r\n                type='search'\r\n                placeholder='Search robots'\r\n                onChange =  {searchChange}\r\n            />\r\n         </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SearchBox","import React from 'react'\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY:'scroll', height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react'\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            hasError: false\r\n        }\r\n    }\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError:true})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Ooops. That is no good...</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n// import { render } from 'react-dom';\r\nimport Cardlist from '../components/Cardlist';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundry from '../components/ErrorBoundry'\r\nimport './App.css';\r\n\r\n// const state = {\r\n//     robots: robots,\r\n//     searchfield:''\r\n// }\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots:[],\r\n            searchfield:''\r\n        }\r\n    }\r\n\r\ncomponentDidMount(){\r\n       axios.get('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => {\r\n                return response.data;\r\n        })\r\n        .then(users => {\r\n\r\n            this.setState({robots:users})\r\n        })\r\n    }\r\n\r\n    onSearchChange=(event)=>{\r\n            this.setState({searchfield:event.target.value})       \r\n        }\r\n\r\n    render(){\r\n         // filter the elements \r\n         const {robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robot =>{\r\n        return robot.name.toLowerCase().includes(searchfield.toLowerCase())      \r\n        })\r\n        \r\n        if(!robots.length){\r\n            return <h1>Loading...</h1>\r\n        }else{\r\n    return (\r\n        <div className='tc '>\r\n            <h1 className='f1'>RobotFriends</h1>\r\n            <SearchBox searchChange={this.onSearchChange}/>\r\n        <Scroll>\r\n            <ErrorBoundry>\r\n                <Cardlist robots={filteredRobots} />\r\n            </ErrorBoundry>\r\n        </Scroll>\r\n        </div>\r\n    );\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'tachyons'\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}